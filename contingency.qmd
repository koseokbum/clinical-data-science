# 명목 변수 분석의 시작: 분할표([contingency table]{.style-text font-weight="bold" color="#023FA5"})

이 장에서는 명목 변수(counting data)의 분석에서 가장 기본이 되는 분할표(contingency table)에 대해 알아본다. 분할표는 명목 변수의 기술 통계(descriptive statistics)의 기본이다. 

분할표는 명목 변수가 취할 수 있는 값들에 대한 빈도(frequency)와 비율(proportion)을 계산하여 만든다. 빈도는 명목 변수의 각 범주(category)에 대해 관측된 횟수를 나타내고, 비율은 명목 변수의 각 범주에 대해 관측된 횟수를 전체 관측치의 수로 나눈 값을 나타낸다.

## R 코드로 분할표 만들기 

먼저 사용할 뇌졸중 데이터셋을 불러온다.

```{r}
#| message: false
library(tidyverse)
stroke_df <- readRDS("data/stroke_df.rds")
glimpse(stroke_df)
```

## `table()`과 관련된 함수 

명목 변수의 빈도와 비율을 계산하는 함수로 `table()`이 있다. `table()` 함수는 팩터 변수의 각 레벨(level)에 대해 관측된 횟수를 계산한다. 

```{r}
table(stroke_df$stroke)
```

`table()` 함수에 2개의 팩터 변수를 입력하면 두 변수의 모든 조합에 대한 빈도를 계산한다. `table()` 함수에 먼저 입력한 변수가 행으로 출력되고, 두 번째 변수가 열로 출력된다. 

```{r}
table(stroke_df$stroke, stroke_df$hypertension)
```

이런 분할표에서 행/열에 대한 집계를 함께 계산하고 싶을 수 있다. 이런 경우에는 `addmargins()` 함수를 사용한다. 이 함수 안에 위에서 만든 분할표를 입력하면 행/열에 대한 집계를 함께 계산한다. 

```{r}
addmargins(table(stroke_df$stroke, stroke_df$hypertension))
```

만약, 행들에 걸친 마진만 계산하고 싶다면 `margin = 1`을 사용하고(열 마진), 열들에 걸친 대한 마진만 계산하고 싶다면 `margin = 2`를 사용한다(행 마진). 
```{r}
addmargins(table(stroke_df$stroke, stroke_df$hypertension), margin = 1)
```

```{r}
addmargins(table(stroke_df$stroke, stroke_df$hypertension), margin = 2)
```

우리는 뇌졸중이 있는 환자군에서 고혈압 환자의 비율과 없는 환자군에서 고혈압 환자의 비율을 비교하고 싶다. 이런 경우에는 `prop.table()` 함수를 사용한다. 

```{r}
prop.table(table(stroke_df$stroke, stroke_df$hypertension), margin = 1)
```

만약, 고혈압이 있는 환자군에서의 뇌졸중이 있는 환자의 비율을 계산하고 싶다면 `margin = 2`를 사용한다. 

```{r}
prop.table(table(stroke_df$stroke, stroke_df$hypertension), margin = 2)
```

R `xtabs()` 함수도 분할표를 만든다. 이 함수에서는 R 포뮬러(formula)를 사용하여 분할표를 만든다. 

```{r}
xtabs(~ stroke + hypertension, stroke_df)
```

3개 이상의 변수에 대한 분할표를 만들 때에는 `xtabs()` 함수를 사용할 수 있다. 

```{r}
tb <- xtabs(~ stroke + hypertension + smoking_status, stroke_df)
tb
```

이런 고차원의 분할표를 좀 더 읽기 쉽게 만들고 싶다면 `ftable()` 함수를 사용한다. 여기서 `f`는 `flatten`을 의미한다. 

```{r}
ftable(tb)
```

고차원 분할표를 데이터프레임으로 변환하고 싶다면 `as.data.frame()` 함수를 사용한다. 

```{r}
df_tbl <- as.data.frame(tb)
df_tbl
```

위 경우를 보면 팩터들의 조합에 따른 빈도를 계산하고 그 값을 `Freq` 변수에 저장하고 있다.  

만약 이와 같은 데이터프레임을 가지고 시작할 때, 이것을 분할표로 변환하고 싶으면 `xtabs()` 함수를 사용하는데, 팩터의 조합에 따른 빈도 값을 포뮬러의 좌변에 둔다.

```{r}
xtabs(Freq ~ stroke + hypertension + smoking_status, df_tbl)
```

## 분할표를 그래프로 그리기 

명목형 변수를 시각화하는 하는 대표적인 그래프는 막대 그래프(bar plot)이다. 이외에도 모자이크 그래프(mosaic plot)도 있고, 파이 차트(pie chart)도 있다. 

```{r}
tbl <- xtabs(~ stroke + hypertension, stroke_df)
tbl
```

베이스 R의 `barplot()` 함수를 사용하여 분할표를 그래프로 그릴 수 있다. 이 함수에는 분할표를 넣어서 사용한다. 
```{r}
barplot(tbl, col = c("red", "blue"))
```

`ggplot2` 패키지는 데이터프레임을 사용하기 때문에 이것을 데이터프레임으로 변환하여 사용한다. 

```{r}
df_tbl2 <- as.data.frame(tbl)
df_tbl2
```

```{r}
ggplot(df_tbl2, aes(x = stroke, y = Freq, fill = hypertension)) +
    geom_col()
```

막대로 "stack" 형태가 아니라 분리하고 싶다면 `geom_col()` 함수에 `position = "dodge"` 옵션을 추가한다. 

```{r}
ggplot(df_tbl2, aes(x = stroke, y = Freq, fill = hypertension)) +
    geom_col(position = "dodge")
```

비율을 그래프로 그리고 싶다면 `geom_col()` 함수에 `position = "fill"` 옵션을 추가한다. 

```{r}
ggplot(df_tbl2, aes(x = stroke, y = Freq, fill = hypertension)) +
    geom_col(position = "fill")
```

베이스 R의 `mosaicplot()` 함수를 사용하여 분할표를 그래프로 그릴 수 있다. 이 함수에는 분할표를 넣어서 사용한다.

```{r}
mosaicplot(tbl)
```

`ggmosaic` 패키지를 사용하여 분할표를 그래프로 그릴 수 있다. 이 패키지는 데이터프레임을 사용하기 때문에 원래의 데이터프레임을 가지고 시작한다.

```{r}
#| warning: false
#| message: false
library(ggmosaic)
ggplot(stroke_df) +
    geom_mosaic(aes(x = product(stroke, hypertension), fill = stroke))
```






